package com.stm.airble.component;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

@Component
public class Airble_Average_Data_Component {
//*
	@Scheduled(cron = "30 30 * * * *", zone = "Asia/Seoul")
	public void airble_outside_data_Schedule() {
		//DB 연결//
		Connection conn = null;
		Statement stmt = null;
		String sql = null;
			
		try {
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			conn = DriverManager.getConnection("jdbc:sqlserver://airble.database.windows.net:1433;DatabaseName=airble", "박기범", "qkrrlqja789!.");
			try {
				stmt = conn.createStatement();
				try {
					int forecast_xy[][] = new int[][]{
						{21, 132}, {21, 135}, 
						{28, 8}, 
						{33, 64}, 
						{38, 129}, 
						{42, 64}, {42, 65}, 
						{43, 95}, 
						{44, 55}, {44, 62}, {44, 68}, 
						{45, 62}, {45, 65}, {45, 67}, {45, 73}, {45, 75}, 
						{46, 35}, {46, 58}, {46, 63}, {46, 66}, {46, 71}, {46, 109}, {46, 119}, 
						{47, 72}, {47, 108}, {47, 128}, 
						{48, 32}, {48, 36}, {48, 48}, {48, 58}, {48, 59}, {48, 60}, {48, 73}, {48, 84}, {48, 107}, {48, 109}, {48, 110}, {48, 111}, {48, 120}, {48, 131}, 
						{49, 32}, {49, 37}, {49, 60}, {49, 62}, {49, 64}, {49, 68}, {49, 70}, {49, 104}, {49, 110}, {49, 130}, 
						{50, 32}, {50, 66}, {50, 67}, {50, 71}, {50, 75}, {50, 102}, {50, 108}, {50, 109}, {50, 124}, {50, 126}, {50, 128}, {50, 129}, {50, 130}, {50, 131}, {50, 132}, {51, 32}, 
						{51, 38}, {51, 61}, {51, 63}, {51, 65}, {51, 66}, {51, 67}, {51, 69}, {51, 74}, {51, 76}, {51, 77}, {51, 79}, {51, 109}, {51, 110}, {51, 111}, {51, 113}, {51, 120}, {51, 125}, {51, 128}, {51, 129}, {51, 130}, {51, 131}, 
						{52, 32}, {52, 33}, {52, 38}, {52, 57}, {52, 60}, {52, 67}, {52, 69}, {52, 71}, {52, 72}, {52, 74}, {52, 75}, {52, 76}, {52, 77}, {52, 79}, {52, 80}, {52, 85}, {52, 99}, {52, 102}, {52, 103}, {52, 105}, {52, 107}, {52, 110}, {52, 112}, {52, 125}, 
						{53, 32}, {53, 33}, {53, 37}, {53, 38}, {53, 53}, {53, 59}, {53, 62}, {53, 64}, {53, 65}, {53, 69}, {53, 71}, {53, 72}, {53, 76}, {53, 77}, {53, 80}, {53, 81}, {53, 82}, {53, 96}, {53, 100}, {53, 101}, {53, 102}, {53, 104}, {53, 106}, {53, 108}, {53, 110}, {53, 112}, {53, 113}, {53, 114}, {53, 120}, {53, 124}, {53, 125}, {53, 128}, {53, 129}, {53, 130}, 
						{54, 33}, {54, 38}, {54, 58}, {54, 60}, {54, 61}, {54, 65}, {54, 68}, {54, 70}, {54, 71}, {54, 72}, {54, 73}, {54, 75}, {54, 78}, {54, 80}, {54, 84}, {54, 91}, {54, 96}, {54, 97}, {54, 98}, {54, 99}, {54, 100}, {54, 104}, {54, 105}, {54, 112}, {54, 123}, {54, 124}, {54, 125}, {54, 126}, {54, 127}, {54, 128}, {54, 129}, {54, 130}, 
						{55, 39}, {55, 53}, {55, 57}, {55, 59}, {55, 61}, {55, 63}, {55, 66}, {55, 67}, {55, 68}, {55, 69}, {55, 70}, {55, 74}, {55, 76}, {55, 79}, {55, 80}, {55, 82}, {55, 84}, {55, 86}, {55, 87}, {55, 91}, {55, 92}, {55, 93}, {55, 94}, {55, 95}, {55, 96}, {55, 97}, {55, 99}, {55, 101}, {55, 104}, {55, 105}, {55, 106}, {55, 107}, {55, 108}, {55, 109}, {55, 110}, {55, 111}, {55, 112}, {55, 113}, {55, 118}, {55, 123}, {55, 124}, {55, 125}, {55, 126}, {55, 127}, {55, 128}, {55, 129}, {55, 130}, {55, 132}, {55, 133}, 
						{56, 33}, {56, 60}, {56, 61}, {56, 64}, {56, 66}, {56, 67}, {56, 68}, {56, 69}, {56, 71}, {56, 72}, {56, 75}, {56, 76}, {56, 77}, {56, 80}, {56, 81}, {56, 82}, {56, 83}, {56, 85}, {56, 87}, {56, 89}, {56, 91}, {56, 92}, {56, 94}, {56, 95}, {56, 96}, {56, 97}, {56, 102}, {56, 106}, {56, 107}, {56, 108}, {56, 109}, {56, 110}, {56, 112}, {56, 119}, {56, 122}, {56, 123}, {56, 124}, {56, 125}, {56, 126}, {56, 127}, {56, 128}, {56, 129}, {56, 130}, {56, 131}, {56, 133}, 
						{57, 56}, {57, 60}, {57, 61}, {57, 63}, {57, 64}, {57, 65}, {57, 70}, {57, 71}, {57, 72}, {57, 73}, {57, 74}, {57, 75}, {57, 77}, {57, 78}, {57, 79}, {57, 80}, {57, 82}, {57, 83}, {57, 84}, {57, 85}, {57, 86}, {57, 88}, {57, 89}, {57, 90}, {57, 91}, {57, 92}, {57, 93}, {57, 94}, {57, 95}, {57, 97}, {57, 98}, {57, 99}, {57, 101}, {57, 102}, {57, 103}, {57, 104}, {57, 105}, {57, 106}, {57, 108}, {57, 109}, {57, 110}, {57, 116}, {57, 119}, {57, 121}, {57, 122}, {57, 123}, {57, 124}, {57, 125}, {57, 126}, {57, 127}, {57, 128}, {57, 129}, {57, 130}, {57, 132}, {57, 134}, 
						{58, 34}, {58, 56}, {58, 58}, {58, 59}, {58, 63}, {58, 65}, {58, 66}, {58, 70}, {58, 72}, {58, 73}, {58, 74}, {58, 75}, {58, 76}, {58, 77}, {58, 83}, {58, 84}, {58, 85}, {58, 87}, {58, 89}, {58, 90}, {58, 92}, {58, 93}, {58, 94}, {58, 99}, {58, 102}, {58, 104}, {58, 106}, {58, 107}, {58, 109}, {58, 110}, {58, 111}, {58, 114}, {58, 119}, {58, 121}, {58, 122}, {58, 123}, {58, 124}, {58, 125}, {58, 126}, {58, 127}, {58, 128}, {58, 129}, {58, 131}, {58, 133}, {58, 136}, 
						{59, 38}, {59, 53}, {59, 58}, {59, 60}, {59, 62}, {59, 64}, {59, 65}, {59, 69}, {59, 71}, {59, 73}, {59, 74}, {59, 75}, {59, 76}, {59, 77}, {59, 80}, {59, 84}, {59, 85}, {59, 86}, {59, 88}, {59, 89}, {59, 90}, {59, 91}, {59, 94}, {59, 95}, {59, 96}, {59, 97}, {59, 98}, {59, 99}, {59, 100}, {59, 107}, {59, 110}, {59, 114}, {59, 115}, {59, 116}, {59, 117}, {59, 118}, {59, 119}, {59, 120}, {59, 121}, {59, 122}, {59, 123}, {59, 124}, {59, 125}, {59, 126}, {59, 127}, {59, 128}, {59, 130}, {59, 135}, {59, 137}, 
						{60, 37}, {60, 38}, {60, 59}, {60, 61}, {60, 68}, {60, 70}, {60, 71}, {60, 73}, {60, 74}, {60, 75}, {60, 76}, {60, 77}, {60, 78}, {60, 80}, {60, 85}, {60, 87}, {60, 88}, {60, 89}, {60, 90}, {60, 91}, {60, 92}, {60, 93}, {60, 94}, {60, 95}, {60, 96}, {60, 100}, {60, 102}, {60, 104}, {60, 105}, {60, 109}, {60, 110}, {60, 111}, {60, 115}, {60, 118}, {60, 119}, {60, 120}, {60, 121}, {60, 122}, {60, 123}, {60, 124}, {60, 125}, {60, 126}, {60, 127}, {60, 128}, {60, 132}, {60, 134}, {60, 137}, {60, 138}, {60, 139}, 
						{61, 56}, {61, 63}, {61, 65}, {61, 66}, {61, 68}, {61, 70}, {61, 72}, {61, 75}, {61, 76}, {61, 77}, {61, 78}, {61, 79}, {61, 82}, {61, 83}, {61, 84}, {61, 86}, {61, 88}, {61, 89}, {61, 90}, {61, 92}, {61, 94}, {61, 96}, {61, 97}, {61, 98}, {61, 100}, {61, 102}, {61, 103}, {61, 104}, {61, 109}, {61, 110}, {61, 111}, {61, 113}, {61, 114}, {61, 115}, {61, 116}, {61, 117}, {61, 118}, {61, 119}, {61, 120}, {61, 121}, {61, 124}, {61, 125}, {61, 126}, {61, 127}, {61, 128}, {61, 129}, {61, 130}, {61, 131}, {61, 132}, {61, 133}, {61, 134}, {61, 135}, {61, 136}, {61, 137}, {61, 138}, 
						{62, 57}, {62, 58}, {62, 66}, {62, 71}, {62, 73}, {62, 76}, {62, 78}, {62, 89}, {62, 90}, {62, 91}, {62, 92}, {62, 94}, {62, 95}, {62, 96}, {62, 97}, {62, 98}, {62, 101}, {62, 108}, {62, 110}, {62, 114}, {62, 115}, {62, 117}, {62, 118}, {62, 119}, {62, 120}, {62, 121}, {62, 122}, {62, 123}, {62, 124}, {62, 125}, {62, 126}, {62, 127}, {62, 128}, {62, 129}, {62, 130}, {62, 131}, {62, 132}, {62, 140}, 
						{63, 59}, {63, 64}, {63, 66}, {63, 69}, {63, 71}, {63, 72}, {63, 75}, {63, 76}, {63, 77}, {63, 78}, {63, 79}, {63, 80}, {63, 81}, {63, 85}, {63, 87}, {63, 88}, {63, 89}, {63, 90}, {63, 93}, {63, 96}, {63, 97}, {63, 99}, {63, 100}, {63, 102}, {63, 103}, {63, 104}, {63, 106}, {63, 108}, {63, 110}, {63, 111}, {63, 112}, {63, 113}, {63, 114}, {63, 115}, {63, 117}, {63, 120}, {63, 121}, {63, 122}, {63, 123}, {63, 124}, {63, 125}, {63, 126}, {63, 127}, {63, 128}, {63, 129}, {63, 130}, {63, 132}, {63, 133}, {63, 136}, 
						{64, 61}, {64, 66}, {64, 67}, {64, 68}, {64, 69}, {64, 76}, {64, 77}, {64, 79}, {64, 82}, {64, 83}, {64, 86}, {64, 88}, {64, 89}, {64, 91}, {64, 92}, {64, 93}, {64, 97}, {64, 104}, {64, 108}, {64, 112}, {64, 113}, {64, 114}, {64, 115}, {64, 116}, {64, 117}, {64, 119}, {64, 120}, {64, 122}, {64, 123}, {64, 124}, {64, 126}, {64, 127}, {64, 128}, {64, 129}, {64, 130}, {64, 131}, {64, 134}, {64, 135}, {64, 136}, {64, 140}, {64, 141}, 
						{65, 62}, {65, 67}, {65, 73}, {65, 74}, {65, 76}, {65, 78}, {65, 80}, {65, 81}, {65, 85}, {65, 90}, {65, 93}, {65, 96}, {65, 97}, {65, 98}, {65, 99}, {65, 101}, {65, 103}, {65, 104}, {65, 105}, {65, 106}, {65, 107}, {65, 109}, {65, 110}, {65, 111}, {65, 113}, {65, 114}, {65, 115}, {65, 116}, {65, 120}, {65, 123}, {65, 124}, {65, 125}, {65, 126}, {65, 129}, {65, 134}, {65, 138}, {65, 139}, 
						{66, 62}, {66, 63}, {66, 66}, {66, 69}, {66, 70}, {66, 74}, {66, 77}, {66, 79}, {66, 82}, {66, 84}, {66, 86}, {66, 91}, {66, 95}, {66, 99}, {66, 100}, {66, 101}, {66, 103}, {66, 104}, {66, 105}, {66, 106}, {66, 109}, {66, 110}, {66, 114}, {66, 118}, {66, 120}, {66, 121}, {66, 122}, {66, 125}, {66, 126}, {66, 128}, {66, 130}, {66, 132}, {66, 135}, {66, 137}, 
						{67, 50}, {67, 60}, {67, 62}, {67, 64}, {67, 65}, {67, 66}, {67, 68}, {67, 69}, {67, 74}, {67, 77}, {67, 78}, {67, 79}, {67, 80}, {67, 82}, {67, 83}, {67, 85}, {67, 87}, {67, 89}, {67, 96}, {67, 98}, {67, 99}, {67, 100}, {67, 101}, {67, 102}, {67, 104}, {67, 106}, {67, 107}, {67, 112}, {67, 116}, {67, 118}, {67, 121}, {67, 125}, {67, 131}, {67, 140}, {67, 142}, {67, 143}, 
						{68, 63}, {68, 71}, {68, 73}, {68, 80}, {68, 82}, {68, 84}, {68, 86}, {68, 88}, {68, 90}, {68, 92}, {68, 94}, {68, 96}, {68, 99}, {68, 100}, {68, 101}, {68, 102}, {68, 103}, {68, 105}, {68, 106}, {68, 107}, {68, 109}, {68, 110}, {68, 111}, {68, 113}, {68, 114}, {68, 116}, {68, 119}, {68, 121}, {68, 123}, {68, 126}, {68, 141}, 
						{69, 59}, {69, 60}, {69, 62}, {69, 68}, {69, 70}, {69, 73}, {69, 75}, {69, 76}, {69, 77}, {69, 78}, {69, 79}, {69, 80}, {69, 82}, {69, 89}, {69, 95}, {69, 96}, {69, 97}, {69, 99}, {69, 100}, {69, 104}, {69, 106}, {69, 107}, {69, 108}, {69, 113}, {69, 114}, {69, 115}, {69, 116}, {69, 117}, {69, 118}, {69, 119}, {69, 121}, {69, 122}, {69, 123}, {69, 125}, {69, 129}, {69, 132}, {69, 133}, {69, 138}, {69, 143}, 
						{70, 69}, {70, 70}, {70, 71}, {70, 75}, {70, 76}, {70, 81}, {70, 83}, {70, 85}, {70, 87}, {70, 91}, {70, 92}, {70, 94}, {70, 95}, {70, 96}, {70, 99}, {70, 100}, {70, 105}, {70, 109}, {70, 111}, {70, 113}, {70, 117}, {70, 119}, {70, 121}, {70, 122}, {70, 123}, {70, 124}, {70, 125}, {70, 130}, {70, 134}, 
						{71, 68}, {71, 69}, {71, 70}, {71, 71}, {71, 75}, {71, 81}, {71, 86}, {71, 87}, {71, 89}, {71, 92}, {71, 98}, {71, 99}, {71, 102}, {71, 104}, {71, 106}, {71, 110}, {71, 114}, {71, 115}, {71, 117}, {71, 121}, {71, 125}, {71, 132}, {71, 137}, {71, 138}, {71, 140}, {71, 143}, 
						{72, 65}, {72, 66}, {72, 71}, {72, 75}, {72, 80}, {72, 82}, {72, 83}, {72, 88}, {72, 90}, {72, 92}, {72, 93}, {72, 95}, {72, 101}, {72, 105}, {72, 107}, {72, 110}, {72, 111}, {72, 112}, {72, 113}, {72, 119}, {72, 122}, {72, 126}, {72, 127}, {72, 129}, {72, 132}, {72, 133}, {72, 134}, {72, 139}, 
						{73, 63}, {73, 66}, {73, 67}, {73, 70}, {73, 71}, {73, 74}, {73, 80}, {73, 83}, {73, 85}, {73, 86}, {73, 95}, {73, 98}, {73, 101}, {73, 103}, {73, 105}, {73, 107}, {73, 111}, {73, 114}, {73, 116}, {73, 117}, {73, 119}, {73, 120}, {73, 124}, {73, 128}, {73, 133}, {73, 134}, {73, 135}, {73, 143}, 
						{74, 63}, {74, 65}, {74, 66}, {74, 68}, {74, 70}, {74, 71}, {74, 73}, {74, 75}, {74, 82}, {74, 83}, {74, 93}, {74, 96}, {74, 97}, {74, 100}, {74, 102}, {74, 103}, {74, 110}, {74, 111}, {74, 113}, {74, 114}, {74, 121}, {74, 131}, {74, 137}, 
						{75, 60}, {75, 70}, {75, 73}, {75, 74}, {75, 81}, {75, 82}, {75, 85}, {75, 87}, {75, 88}, {75, 93}, {75, 99}, {75, 102}, {75, 104}, {75, 110}, {75, 112}, {75, 114}, {75, 115}, {75, 117}, {75, 122}, {75, 125}, {75, 130}, {75, 136}, {75, 143}, 
						{76, 67}, {76, 70}, {76, 72}, {76, 77}, {76, 78}, {76, 80}, {76, 81}, {76, 82}, {76, 86}, {76, 89}, {76, 92}, {76, 103}, {76, 111}, {76, 114}, {76, 115}, {76, 116}, {76, 117}, {76, 118}, {76, 121}, {76, 122}, {76, 123}, {76, 124}, {76, 129}, {76, 141}, 
						{77, 66}, {77, 68}, {77, 69}, {77, 72}, {77, 74}, {77, 75}, {77, 81}, {77, 84}, {77, 85}, {77, 86}, {77, 87}, {77, 89}, {77, 93}, {77, 96}, {77, 97}, {77, 98}, {77, 100}, {77, 101}, {77, 103}, {77, 105}, {77, 111}, {77, 113}, {77, 114}, {77, 115}, {77, 116}, {77, 122}, {77, 123}, {77, 125}, {77, 126}, {77, 131}, {77, 139}, 
						{78, 67}, {78, 71}, {78, 72}, {78, 74}, {78, 76}, {78, 78}, {78, 88}, {78, 91}, {78, 98}, {78, 106}, {78, 110}, {78, 111}, {78, 118}, {78, 121}, {78, 124}, {78, 134}, {78, 139}, {78, 141}, 
						{79, 65}, {79, 67}, {79, 68}, {79, 75}, {79, 76}, {79, 79}, {79, 80}, {79, 81}, {79, 83}, {79, 85}, {79, 87}, {79, 91}, {79, 93}, {79, 94}, {79, 96}, {79, 102}, {79, 105}, {79, 107}, {79, 112}, {79, 120}, {79, 125}, {79, 127}, {79, 132}, {79, 136}, {79, 143}, 
						{80, 65}, {80, 70}, {80, 71}, {80, 72}, {80, 73}, {80, 74}, {80, 75}, {80, 76}, {80, 86}, {80, 94}, {80, 95}, {80, 96}, {80, 97}, {80, 99}, {80, 100}, {80, 101}, {80, 103}, {80, 106}, {80, 108}, {80, 109}, {80, 118}, {80, 123}, {80, 124}, {80, 127}, {80, 138}, 
						{81, 70}, {81, 72}, {81, 74}, {81, 75}, {81, 76}, {81, 78}, {81, 79}, {81, 80}, {81, 81}, {81, 83}, {81, 84}, {81, 87}, {81, 88}, {81, 91}, {81, 95}, {81, 96}, {81, 97}, {81, 98}, {81, 102}, {81, 104}, {81, 105}, {81, 106}, {81, 107}, {81, 113}, {81, 115}, {81, 116}, {81, 118}, {81, 126}, {81, 130}, {81, 139}, {81, 141}, 
						{82, 70}, {82, 71}, {82, 72}, {82, 73}, {82, 75}, {82, 77}, {82, 79}, {82, 83}, {82, 84}, {82, 88}, {82, 89}, {82, 91}, {82, 92}, {82, 95}, {82, 99}, {82, 101}, {82, 103}, {82, 106}, {82, 107}, {82, 118}, {82, 119}, {82, 121}, {82, 134}, {82, 146}, 
						{83, 68}, {83, 73}, {83, 74}, {83, 75}, {83, 76}, {83, 78}, {83, 81}, {83, 82}, {83, 83}, {83, 84}, {83, 86}, {83, 87}, {83, 91}, {83, 93}, {83, 97}, {83, 98}, {83, 100}, {83, 102}, {83, 104}, {83, 106}, {83, 110}, {83, 113}, {83, 114}, {83, 116}, {83, 120}, {83, 136}, 
						{84, 63}, {84, 70}, {84, 72}, {84, 75}, {84, 79}, {84, 80}, {84, 81}, {84, 84}, {84, 86}, {84, 88}, {84, 90}, {84, 92}, {84, 94}, {84, 95}, {84, 96}, {84, 97}, {84, 100}, {84, 103}, {84, 106}, {84, 113}, {84, 115}, {84, 117}, {84, 123}, {84, 124}, {84, 128}, {84, 132}, {84, 147}, 
						{85, 69}, {85, 71}, {85, 73}, {85, 75}, {85, 77}, {85, 78}, {85, 80}, {85, 82}, {85, 84}, {85, 85}, {85, 87}, {85, 88}, {85, 91}, {85, 93}, {85, 94}, {85, 95}, {85, 96}, {85, 97}, {85, 101}, {85, 102}, {85, 105}, {85, 107}, {85, 108}, {85, 110}, {85, 119}, {85, 120}, {85, 126}, {85, 128}, {85, 145}, {85, 146}, 
						{86, 67}, {86, 68}, {86, 69}, {86, 71}, {86, 72}, {86, 74}, {86, 76}, {86, 77}, {86, 79}, {86, 82}, {86, 86}, {86, 87}, {86, 88}, {86, 89}, {86, 90}, {86, 91}, {86, 95}, {86, 96}, {86, 97}, {86, 99}, {86, 101}, {86, 102}, {86, 103}, {86, 106}, {86, 107}, {86, 109}, {86, 117}, {86, 119}, {86, 122}, {86, 144}, 
						{87, 68}, {87, 74}, {87, 79}, {87, 80}, {87, 81}, {87, 83}, {87, 84}, {87, 85}, {87, 87}, {87, 89}, {87, 90}, {87, 92}, {87, 96}, {87, 101}, {87, 103}, {87, 105}, {87, 108}, {87, 109}, {87, 112}, {87, 129}, {87, 138}, {87, 140}, {87, 141}, {87, 142}, 
						{88, 66}, {88, 68}, {88, 70}, {88, 74}, {88, 77}, {88, 78}, {88, 79}, {88, 81}, {88, 82}, {88, 84}, {88, 89}, {88, 90}, {88, 91}, {88, 92}, {88, 93}, {88, 95}, {88, 97}, {88, 98}, {88, 99}, {88, 100}, {88, 101}, {88, 106}, {88, 110}, {88, 111}, {88, 113}, {88, 114}, {88, 118}, {88, 138}, 
						{89, 68}, {89, 74}, {89, 75}, {89, 76}, {89, 77}, {89, 79}, {89, 80}, {89, 81}, {89, 85}, {89, 86}, {89, 89}, {89, 90}, {89, 91}, {89, 92}, {89, 110}, {89, 111}, {89, 115}, {89, 118}, {89, 120}, {89, 123}, {89, 125}, {89, 130}, {89, 137}, 
						{90, 66}, {90, 68}, {90, 69}, {90, 76}, {90, 77}, {90, 82}, {90, 83}, {90, 85}, {90, 86}, {90, 89}, {90, 90}, {90, 91}, {90, 92}, {90, 95}, {90, 96}, {90, 98}, {90, 99}, {90, 101}, {90, 102}, {90, 104}, {90, 105}, {90, 106}, {90, 107}, {90, 108}, {90, 109}, {90, 113}, {90, 115}, {90, 121}, {90, 125}, {90, 136}, 
						{91, 69}, {91, 70}, {91, 71}, {91, 75}, {91, 76}, {91, 77}, {91, 78}, {91, 79}, {91, 80}, {91, 81}, {91, 83}, {91, 86}, {91, 88}, {91, 89}, {91, 90}, {91, 91}, {91, 97}, {91, 98}, {91, 103}, {91, 105}, {91, 106}, {91, 107}, {91, 110}, {91, 111}, {91, 113}, {91, 123}, {91, 134}, 
						{92, 68}, {92, 69}, {92, 74}, {92, 77}, {92, 78}, {92, 81}, {92, 82}, {92, 83}, {92, 84}, {92, 86}, {92, 89}, {92, 90}, {92, 94}, {92, 96}, {92, 99}, {92, 100}, {92, 102}, {92, 105}, {92, 110}, {92, 113}, {92, 118}, {92, 120}, {92, 126}, {92, 130}, {92, 131}, {92, 132}, {92, 133}, {92, 134}, 
						{93, 73}, {93, 74}, {93, 75}, {93, 76}, {93, 77}, {93, 79}, {93, 80}, {93, 83}, {93, 89}, {93, 91}, {93, 92}, {93, 93}, {93, 94}, {93, 108}, {93, 112}, {93, 113}, {93, 131}, {93, 132}, 
						{94, 74}, {94, 76}, {94, 77}, {94, 79}, {94, 83}, {94, 84}, {94, 86}, {94, 87}, {94, 89}, {94, 91}, {94, 92}, {94, 95}, {94, 96}, {94, 100}, {94, 103}, {94, 106}, {94, 114}, {94, 118}, {94, 123}, {94, 131}, 
						{95, 74}, {95, 76}, {95, 77}, {95, 78}, {95, 80}, {95, 87}, {95, 93}, {95, 94}, {95, 100}, {95, 111}, {95, 114}, {95, 117}, {95, 119}, {95, 129}, 
						{96, 73}, {96, 74}, {96, 75}, {96, 76}, {96, 77}, {96, 78}, {96, 92}, {96, 95}, {96, 100}, {96, 103}, {96, 104}, {96, 105}, {96, 108}, {96, 116}, {96, 118}, {96, 120}, {96, 123}, {96, 126}, {96, 127}, 
						{97, 73}, {97, 74}, {97, 75}, {97, 76}, {97, 77}, {97, 79}, {97, 81}, {97, 88}, {97, 91}, {97, 94}, {97, 97}, {97, 101}, {97, 106}, {97, 108}, {97, 124}, {97, 125}, {97, 126}, {97, 127}, 
						{98, 73}, {98, 74}, {98, 75}, {98, 76}, {98, 77}, {98, 78}, {98, 79}, {98, 82}, {98, 84}, {98, 85}, {98, 90}, {98, 101}, {98, 106}, {98, 109}, {98, 119}, {98, 123}, {98, 125}, 
						{99, 74}, {99, 75}, {99, 76}, {99, 77}, {99, 78}, {99, 80}, {99, 81}, {99, 83}, {99, 86}, {99, 90}, {99, 96}, {99, 110}, {99, 114}, {99, 124}, 
						{100, 75}, {100, 76}, {100, 77}, {100, 79}, {100, 82}, {100, 84}, {100, 86}, {100, 88}, {100, 90}, {100, 91}, {100, 93}, {100, 95}, {100, 97}, {100, 103}, 
						{101, 78}, {101, 79}, {101, 81}, {101, 84}, {101, 89}, {101, 90}, {101, 91}, {101, 93}, {101, 102}, {101, 109}, {101, 118}, {101, 119}, 
						{102, 80}, {102, 81}, {102, 83}, {102, 84}, {102, 85}, {102, 86}, {102, 88}, {102, 93}, {102, 94}, {102, 95}, {102, 96}, {102, 98}, {102, 99}, {102, 100}, {102, 102}, {102, 103}, {102, 106}, {102, 114}, {102, 115}, {102, 117}, 
						{103, 83}, {103, 84}, {103, 85}, {103, 93}, {103, 94}, {103, 95}, {103, 105}, {103, 107}, {103, 109}, {103, 110}, {103, 111}, 
						{104, 83}, {104, 84}, {104, 85}, {104, 87}, {104, 89}, {104, 94}, 
						{105, 90}, {105, 92}, {105, 94}, 
						{106, 96}, 
						{126, 127}, 
						{127, 127}, {127, 129}, 
						{144, 123} 
					};
					

					TimeZone time = TimeZone.getTimeZone("Asia/Seoul");
					Date date = new Date();

					String key = "uEBj0XC22aD83RXLo35sFx%2F4%2FX16d68dk08Rw97nNpxtd%2BUp%2B6bfhD1EqKIMir9EkbLVK7yvVBKgWne7sDBuEw%3D%3D";
					
					DateFormat date_ymd = new SimpleDateFormat("yyyyMMdd");
					DateFormat time_h = new SimpleDateFormat("HH");
					date_ymd.setTimeZone(time);
					time_h.setTimeZone(time);							
					
					URL url = null;
					BufferedReader bf;
					String result = "";
					
					JSONParser jsonParser = new JSONParser();
					JSONObject jsonObject;
					JSONArray personArray;
					
					float temp = 0.0f, humi = 0.0f;
					sql = "";
					
					for(int i = 0; i < forecast_xy.length; i++){
						try{
							url = new URL("https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst?serviceKey=" + key + "&pageNo=1&numOfRows=100&dataType=JSON&base_date=" +  date_ymd.format(date) + "&base_time=" + time_h.format(date) + "00&nx=" + forecast_xy[i][0] + "&ny=" + forecast_xy[i][1]);
							bf = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));
							result = bf.readLine();
							
							jsonObject = (JSONObject) jsonParser.parse(result);
							jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("response").toString());
							jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("body").toString());
							jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("items").toString());
							personArray = (JSONArray) jsonObject.get("item");
							
							for (int j = 0; j < personArray.size(); j++){
								JSONObject personObject = (JSONObject) personArray.get(j);
								if(personObject.get("category").equals("T1H")){
									temp = Float.parseFloat(personObject.get("obsrValue").toString());
								}
								if(personObject.get("category").equals("REH")){
									humi = Float.parseFloat(personObject.get("obsrValue").toString());
								}
							}
							sql += "update [dbo].[Air_Data_TB] set Temp = " + temp + ", Humi = " + humi + ", Update_DT = dateadd(HOUR, 9, getdate()) where X_AXIS = " + forecast_xy[i][0] + " and Y_AXIS = " + forecast_xy[i][1] + ";";
							//System.out.println("진행 상황 : (" + forecast_xy.length + "/" + i + ") + x = " + forecast_xy[i][0] + ", y = " + forecast_xy[i][1]);
						}catch(Exception e){
							//System.out.println("에러! 진행 상황 : (" + forecast_xy.length + "/" + i + ") + x = " + forecast_xy[i][0] + ", y = " + forecast_xy[i][1]);
							i--;
						}
					}
					stmt.executeUpdate(sql);
					
					String sidoName = URLEncoder.encode("전국", "UTF-8");
					url = new URL("https://apis.data.go.kr/B552584/ArpltnInforInqireSvc/getCtprvnRltmMesureDnsty?serviceKey=" + key + "&returnType=json&numOfRows=1000&pageNo=1&sidoName=" + sidoName + "&ver=1.4");
					bf = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));
					result = bf.readLine();

					jsonObject = (JSONObject) jsonParser.parse(result);
					jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("response").toString());
					jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("body").toString());
					personArray = (JSONArray) jsonObject.get("items");

					String sido = "";
					
					int sido_value[] = new int[17], sido_count[] = new int[17];
					int pm_value = 0;
					
					for(int i = 0; i < 17; i++){
						sido_value[i] = 0;
						sido_count[i] = 0;
					}
					
					for (int i = 0; i < personArray.size(); i++){
						JSONObject personObject = (JSONObject) personArray.get(i);
						
						try{
							pm_value = Integer.parseInt(personObject.get("pm25Value").toString());
						}catch(Exception e){
							pm_value = -1;
						}
						
						if(pm_value >= 0){
							sido = personObject.get("sidoName").toString();
							switch(sido){
								case "강원":
									sido_value[0] += pm_value;
									sido_count[0]++;
								break;
								
								case "경기":
									sido_value[1] += pm_value;
									sido_count[1]++;
								break;
								
								case "경남":
									sido_value[2] += pm_value;
									sido_count[2]++;
								break;
								
								case "경북":
									sido_value[3] += pm_value;
									sido_count[3]++;
								break;
								
								case "광주":
									sido_value[4] += pm_value;
									sido_count[4]++;
								break;
								
								case "대구":
									sido_value[5] += pm_value;
									sido_count[5]++;
								break;
								
								case "대전":
									sido_value[6] += pm_value;
									sido_count[6]++;
								break;
								
								case "부산":
									sido_value[7] += pm_value;
									sido_count[7]++;
								break;
								
								case "서울":
									sido_value[8] += pm_value;
									sido_count[8]++;
								break;
								
								case "세종":
									sido_value[9] += pm_value;
									sido_count[9]++;
								break;
								
								case "울산":
									sido_value[10] += pm_value;
									sido_count[10]++;
								break;
								
								case "인천":
									sido_value[11] += pm_value;
									sido_count[11]++;
								break;
								
								case "전남":
									sido_value[12] += pm_value;
									sido_count[12]++;
								break;
								
								case "전북":
									sido_value[13] += pm_value;
									sido_count[13]++;
								break;
								
								case "제주":
									sido_value[14] += pm_value;
									sido_count[14]++;
								break;
								
								case "충남":
									sido_value[15] += pm_value;
									sido_count[15]++;
								break;
								
								case "충북":
									sido_value[16] += pm_value;
									sido_count[16]++;
								break;
							}
						}
					}
					
					sql = "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[0]/sido_count[0]) + " where Division_1 like '%강원%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[1]/sido_count[1]) + " where Division_1 like '%경기%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[2]/sido_count[2]) + " where Division_1 like '%경상남도%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[3]/sido_count[3]) + " where Division_1 like '%경상북도%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[4]/sido_count[4]) + " where Division_1 like '%광주%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[5]/sido_count[5]) + " where Division_1 like '%대구%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[6]/sido_count[6]) + " where Division_1 like '%대전%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[7]/sido_count[7]) + " where Division_1 like '%부산%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[8]/sido_count[8]) + " where Division_1 like '%서울%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[9]/sido_count[9]) + " where Division_1 like '%세종%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[10]/sido_count[10]) + " where Division_1 like '%울산%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[11]/sido_count[11]) + " where Division_1 like '%인천%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[12]/sido_count[12]) + " where Division_1 like '%전라남도%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[13]/sido_count[13]) + " where Division_1 like '%전라북도%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[14]/sido_count[14]) + " where Division_1 like '%제주%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[15]/sido_count[15]) + " where Division_1 like '%충청남도%';"
						+ "update [dbo].[Air_Data_TB] set PM = " + (int)(sido_value[16]/sido_count[16]) + " where Division_1 like '%충청북도%';";
					//System.out.println(sql);
					stmt.executeUpdate(sql);
				}catch(Exception e) {
					
				}
				
				stmt.close();
				conn.close();
			}catch(Exception e) {
				System.out.println("stmt 에러");
			}
		}catch(Exception e) {
			System.out.println("데이터베이스 연결 에러");
		}
	}
	
	@Scheduled(cron = "0 * * * * *", zone = "Asia/Seoul")
	public void airble_data_seconds_to_minutes_Schedule() {
		//DB 연결//
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql = null;
			
		try {
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			conn = DriverManager.getConnection("jdbc:sqlserver://airble.database.windows.net:1433;DatabaseName=airble", "박기범", "qkrrlqja789!.");
			try {
				stmt = conn.createStatement();
				sql = "delete [dbo].[Airble_Real_Time_TB] where DATEDIFF(SECOND, Airble_Data_DT, dateadd(HOUR, 9, getdate())) >= 60 and Airble_Device_FK not in ('12:34:56:78:90:12', '12:34:56:78:90:13')";
				stmt.executeUpdate(sql);
				
				sql = "select * from [dbo].[Airble_Real_Time_TB]";
				rs = stmt.executeQuery(sql);

				List<String> sql_list = new ArrayList<String>();
				
				while(rs.next()){
					sql = "insert into [dbo].[Airble_M_Time_TB] values ('" + rs.getString("Airble_Device_FK") + "', " + rs.getInt("Airble_CO") + ", " + rs.getInt("Airble_CO2") + ", " + rs.getInt("Airble_VOC") + ", " + rs.getInt("Airble_Dust") + ", " + rs.getInt("Airble_Temp") + ", " + rs.getInt("Airble_Humi") + ", dateadd(HOUR, 9, getdate()))";
					
					sql_list.add(sql);
				}
				
				for(int i = 0; i < sql_list.size(); i++) {
					stmt.executeUpdate(sql_list.get(i));
				}
				
				rs.close();
				stmt.close();
				conn.close();
			}catch(Exception e) {
				System.out.println("stmt 에러");
			}
		}catch(Exception e) {
			System.out.println("데이터베이스 연결 에러");
		}
	}
	
	@Scheduled(cron = "10 0 * * * *", zone = "Asia/Seoul")
	public void airble_data_minutes_to_hours_Schedule() {
		//DB 연결//
		Connection conn = null; 
		Statement stmt = null;
		ResultSet rs = null;
		String sql = null;
			
		try {
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			conn = DriverManager.getConnection("jdbc:sqlserver://airble.database.windows.net:1433;DatabaseName=airble", "박기범", "qkrrlqja789!.");
			try {
				stmt = conn.createStatement();
				
				sql = "select Airble_Device_FK, AVG(Airble_CO) as Airble_CO, AVG(Airble_CO2) as Airble_CO2, AVG(Airble_VOC) as Airble_VOC, AVG(Airble_Dust) as Airble_Dust, AVG(Airble_Temp) as Airble_Temp, AVG(Airble_Humi) as Airble_Humi "
						+ "from [dbo].[Airble_M_Time_TB] group by Airble_Device_FK";
				rs = stmt.executeQuery(sql);

				List<String> sql_list = new ArrayList<String>();
				
				while(rs.next()){
					sql = "insert into [dbo].[Airble_H_Time_TB] values ('" + rs.getString("Airble_Device_FK") + "', " + rs.getInt("Airble_CO") + ", " + rs.getInt("Airble_CO2") + ", " + rs.getInt("Airble_VOC") + ", " + rs.getInt("Airble_Dust") + ", " + rs.getInt("Airble_Temp") + ", " + rs.getInt("Airble_Humi") + ", dateadd(HOUR, 9, getdate()))";
					//System.out.println(sql);
					sql_list.add(sql);
				}
				
				for(int i = 0; i < sql_list.size(); i++) {
					stmt.executeUpdate(sql_list.get(i));
				}
				
				sql = "delete [dbo].[Airble_M_Time_TB]";
				stmt.executeUpdate(sql);
				
				rs.close();
				stmt.close();
				conn.close();
			}catch(Exception e) {
				System.out.println("stmt 에러");
			}
		}catch(Exception e) {
			System.out.println("데이터베이스 연결 에러");
		}
	}
//	*/
}
